"use strict";

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "prop-types", "react", "../../@patternfly/patternfly/components/Button/button.css.js", "@patternfly/react-styles"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("prop-types"), require("react"), require("../../@patternfly/patternfly/components/Button/button.css.js"), require("@patternfly/react-styles"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.propTypes, global.react, global.buttonCss, global.reactStyles);
    global.undefined = mod.exports;
  }
})(void 0, function (exports, _propTypes, _react, _buttonCss, _reactStyles) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Button = exports.ButtonType = exports.ButtonVariant = undefined;

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var React = _interopRequireWildcard(_react);

  var _buttonCss2 = _interopRequireDefault(_buttonCss);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  var ButtonVariant = exports.ButtonVariant = undefined;

  (function (ButtonVariant) {
    ButtonVariant["primary"] = "primary";
    ButtonVariant["secondary"] = "secondary";
    ButtonVariant["tertiary"] = "tertiary";
    ButtonVariant["danger"] = "danger";
    ButtonVariant["link"] = "link";
    ButtonVariant["plain"] = "plain";
  })(ButtonVariant || (exports.ButtonVariant = ButtonVariant = {}));

  ;
  var ButtonType = exports.ButtonType = undefined;

  (function (ButtonType) {
    ButtonType["button"] = "button";
    ButtonType["submit"] = "submit";
  })(ButtonType || (exports.ButtonType = ButtonType = {}));

  ;

  var Button = exports.Button = function Button(_ref) {
    var _ref$children = _ref.children,
        children = _ref$children === void 0 ? null : _ref$children,
        _ref$className = _ref.className,
        className = _ref$className === void 0 ? '' : _ref$className,
        _ref$component = _ref.component,
        component = _ref$component === void 0 ? 'button' : _ref$component,
        _ref$isActive = _ref.isActive,
        isActive = _ref$isActive === void 0 ? false : _ref$isActive,
        _ref$isBlock = _ref.isBlock,
        isBlock = _ref$isBlock === void 0 ? false : _ref$isBlock,
        _ref$isDisabled = _ref.isDisabled,
        isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,
        _ref$isFocus = _ref.isFocus,
        isFocus = _ref$isFocus === void 0 ? false : _ref$isFocus,
        _ref$isHover = _ref.isHover,
        isHover = _ref$isHover === void 0 ? false : _ref$isHover,
        _ref$isInline = _ref.isInline,
        isInline = _ref$isInline === void 0 ? false : _ref$isInline,
        _ref$type = _ref.type,
        type = _ref$type === void 0 ? ButtonType.button : _ref$type,
        _ref$variant = _ref.variant,
        variant = _ref$variant === void 0 ? ButtonVariant.primary : _ref$variant,
        _ref$ariaLabel = _ref['aria-label'],
        ariaLabel = _ref$ariaLabel === void 0 ? null : _ref$ariaLabel,
        props = _objectWithoutProperties(_ref, ["children", "className", "component", "isActive", "isBlock", "isDisabled", "isFocus", "isHover", "isInline", "type", "variant", "aria-label"]);

    var Component = component;
    var isButtonElement = Component === 'button';
    return React.createElement(Component, _extends({}, props, {
      "aria-disabled": isButtonElement ? null : isDisabled,
      "aria-label": ariaLabel,
      className: (0, _reactStyles.css)(_buttonCss2["default"].button, (0, _reactStyles.getModifier)(_buttonCss2["default"].modifiers, variant), isBlock && _buttonCss2["default"].modifiers.block, isDisabled && _buttonCss2["default"].modifiers.disabled, isActive && _buttonCss2["default"].modifiers.active, isFocus && _buttonCss2["default"].modifiers.focus, isHover && _buttonCss2["default"].modifiers.hover, isInline && variant === ButtonVariant.link && _buttonCss2["default"].modifiers.inline, className),
      disabled: isButtonElement ? isDisabled : null,
      tabIndex: isDisabled && !isButtonElement ? -1 : null,
      type: isButtonElement ? type : null
    }), children);
  };

  Button.propTypes = {
    children: _propTypes2["default"].node,
    className: _propTypes2["default"].string,
    component: _propTypes2["default"].node,
    isActive: _propTypes2["default"].bool,
    isBlock: _propTypes2["default"].bool,
    isDisabled: _propTypes2["default"].bool,
    isFocus: _propTypes2["default"].bool,
    isHover: _propTypes2["default"].bool,
    isInline: _propTypes2["default"].bool,
    type: _propTypes2["default"].oneOf(['button', 'submit']),
    variant: _propTypes2["default"].oneOf(['primary', 'secondary', 'tertiary', 'danger', 'link', 'plain']),
    'aria-label': _propTypes2["default"].string
  };
});